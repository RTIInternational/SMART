version: '2.1'

services:
  reverse-proxy:
    image: traefik:v2.2
    container_name: smart-reverse-proxy
    command: 
      # - "--api.insecure=true" # uncomment this to open the traefik web interface
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.constraint`,`smart-prod`)"
      - "--entrypoints.web.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      # - "8080:8080" # The Web UI (enabled by --api.insecure=true)
    labels:
      - "traefik.enable=true"
      - "traefik.constraint=smart-prod"

  postgres:
    extends:
      file: ../docker-common.yml
      service: postgres

  redis:
    extends:
      file: ../docker-common.yml
      service: redis

  backend:
    extends:
      file: ../docker-common.yml
      service: backend
    build:
      context: ../../backend/
      dockerfile: docker/Dockerfile.prod
    image: rti/smart-backend-prod:R_0_0_1
    restart: always
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.constraint=smart-prod"

  smart_frontend:
    extends:
      file: ../docker-common.yml
      service: smart_frontend
    build:
      context: ../../frontend/
      dockerfile: Dockerfile.prod
    image: rti/smart-frontend-prod:R_0_0_1
    command: nginx -c /code/nginx.conf -g "daemon off;"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.constraint=smart-prod"

volumes:
  smart_pgdata:
    external: true
    name: vol_smart_pgdata
  smart_data:
    external: true
    name: vol_smart_data
